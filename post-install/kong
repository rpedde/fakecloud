#!/bin/bash

# $1 - ip (assumes passwordless ssh)
# $2 - distrelease
# $3 - hints

ip=${1}
distrelease=${2}
hints=${3}

dist=${distrelease%%-*}
release=${distrelease##*-}
tmpdir=$(mktemp -d)

declare -A kong_map

kong_map=(
    [essex-e3]=master,
    [diablo-final]=master,
    [diablo-d5]=diablo-d5
)

[ -e /home/${SUDO_USER}/.ssh/id_dsa ] && IDENTITY_FILE=/home/${SUDO_USER}/.ssh/id_dsa
[ -e /home/${SUDO_USER}/.ssh/id_rsa ] && IDENTITY_FILE=/home/${SUDO_USER}/.ssh/id_rsa

REPO_URL=${REPO_URL:-http://build.monkeypuppetlabs.com/proposed-packages}
COMPONENT=${COMPONENT:-diablo-final}

SSHOPS="-o UserKnownhostsFile=/dev/null -o StrictHostKeyChecking=no"
if [ "${IDENTITY_FILE-}" != "" ]; then
    SSHOPS+=" -i${IDENTITY_FILE}"
fi

case ${distrelease} in
    ubuntu*)
        cat > ${tmpdir}/dna.json <<EOF
{
  "public": {
    "label": "public",
    "num_networks": "1",
    "network_size": "255",
    "bridge": "br100",
    "bridge_dev": "eth0.100",
    "dns1": "8.8.8.8",
    "dns2": "8.8.4.4"
  },

  "private": {
    "label": "private",
    "num_networks": "1",
    "network_size": "255",
    "bridge": "br101",
    "bridge_dev": "eth0.101",
    "dns1": "8.8.8.8",
    "dns2": "8.8.4.4"
  },


  "package_url": "${REPO_URL}",
  "package_release": "${release}",
  "package_component": "${COMPONENT}",
  "virt_type": "qemu",

  "kong_branch": "${kong_map[${release}]}",

  "run_list": [ "recipe[apt]", "recipe[openstack::allinone]", "recipe[kong]" ]
}
EOF

        wget --no-check-certificate https://raw.github.com/rcbops/chef-cookbooks/master/cookbooks.tgz -O ${tmpdir}/cookbooks.tar.gz

        scp ${SSHOPS} ${tmpdir}/* root@${ip}:
        ssh ${SSHOPS} root@${ip} DEBIAN_FRONTEND=noninteractive apt-get install chef -y --force-yes
        ssh ${SSHOPS} root@${ip} chef-solo -r ./cookbooks.tar.gz -j ./dna.json -l debug
        ;;

    *)
        echo "Can't do, boss."
        ;;
esac
